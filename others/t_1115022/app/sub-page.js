"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("data/observable");
var frame_1 = require("ui/frame");
var subViewModel = new observable_1.Observable();
function navigatingTo(args) {
    var page = args.object;
    subViewModel.set("newProp", "NativeScript");
    page.bindingContext = subViewModel;
}
exports.navigatingTo = navigatingTo;
function getContext() {
    console.log("currentPage: " + frame_1.topmost().currentPage);
    console.log("stack: " + frame_1.stack());
    var currentStack = frame_1.stack();
    console.log("currentStack.length: " + currentStack.length);
    var firstFrame = currentStack[0];
    console.log(firstFrame.currentPage);
    console.log(firstFrame.currentPage.bindingContext.get("message"));
}
exports.getContext = getContext;
function navigate() {
    frame_1.topmost().navigate("third-page");
}
exports.navigate = navigate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLXBhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzdWItcGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhDQUF3RDtBQUd4RCxrQ0FBMEM7QUFDMUMsSUFBSSxZQUFZLEdBQUcsSUFBSSx1QkFBVSxFQUFFLENBQUM7QUFFcEMsc0JBQTZCLElBQWU7SUFFeEMsSUFBSSxJQUFJLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUU3QixZQUFZLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUU1QyxJQUFJLENBQUMsY0FBYyxHQUFHLFlBQVksQ0FBQztBQUN2QyxDQUFDO0FBUEQsb0NBT0M7QUFDRDtJQUVJLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxHQUFHLGVBQU8sRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3JELE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLGFBQUssRUFBRSxDQUFDLENBQUM7SUFFakMsSUFBSSxZQUFZLEdBQUcsYUFBSyxFQUFFLENBQUM7SUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUE7SUFFMUQsSUFBSSxVQUFVLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0lBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQVhELGdDQVdDO0FBRUQ7SUFDSSxlQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDckMsQ0FBQztBQUZELDRCQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnREYXRhLCBPYnNlcnZhYmxlIH0gZnJvbSAnZGF0YS9vYnNlcnZhYmxlJztcclxuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xyXG5pbXBvcnQgeyBIZWxsb1dvcmxkTW9kZWwgfSBmcm9tICcuL21haW4tdmlldy1tb2RlbCc7XHJcbmltcG9ydCB7IHRvcG1vc3QsIHN0YWNrIH0gZnJvbSBcInVpL2ZyYW1lXCI7XHJcbmxldCBzdWJWaWV3TW9kZWwgPSBuZXcgT2JzZXJ2YWJsZSgpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRpbmdUbyhhcmdzOiBFdmVudERhdGEpIHtcclxuXHJcbiAgICBsZXQgcGFnZSA9IDxQYWdlPmFyZ3Mub2JqZWN0O1xyXG5cclxuICAgIHN1YlZpZXdNb2RlbC5zZXQoXCJuZXdQcm9wXCIsIFwiTmF0aXZlU2NyaXB0XCIpO1xyXG5cclxuICAgIHBhZ2UuYmluZGluZ0NvbnRleHQgPSBzdWJWaWV3TW9kZWw7XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHQoKSB7XHJcblxyXG4gICAgY29uc29sZS5sb2coXCJjdXJyZW50UGFnZTogXCIgKyB0b3Btb3N0KCkuY3VycmVudFBhZ2UpOyBcclxuICAgIGNvbnNvbGUubG9nKFwic3RhY2s6IFwiICsgc3RhY2soKSk7IFxyXG5cclxuICAgIGxldCBjdXJyZW50U3RhY2sgPSBzdGFjaygpO1xyXG4gICAgY29uc29sZS5sb2coXCJjdXJyZW50U3RhY2subGVuZ3RoOiBcIiArIGN1cnJlbnRTdGFjay5sZW5ndGgpXHJcblxyXG4gICAgbGV0IGZpcnN0RnJhbWUgPSBjdXJyZW50U3RhY2tbMF07XHJcbiAgICBjb25zb2xlLmxvZyhmaXJzdEZyYW1lLmN1cnJlbnRQYWdlKVxyXG4gICAgY29uc29sZS5sb2coZmlyc3RGcmFtZS5jdXJyZW50UGFnZS5iaW5kaW5nQ29udGV4dC5nZXQoXCJtZXNzYWdlXCIpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xyXG4gICAgdG9wbW9zdCgpLm5hdmlnYXRlKFwidGhpcmQtcGFnZVwiKTtcclxufSJdfQ==