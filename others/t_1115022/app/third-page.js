"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("data/observable");
var frame_1 = require("ui/frame");
var subViewModel = new observable_1.Observable();
function navigatingTo(args) {
    var page = args.object;
    subViewModel.set("newProp", "NativeScript");
    page.bindingContext = subViewModel;
}
exports.navigatingTo = navigatingTo;
function getContext() {
    console.log("currentPage: " + frame_1.topmost().currentPage);
    console.log("stack: " + frame_1.stack());
    var currentStack = frame_1.stack();
    console.log("currentStack.length: " + currentStack.length);
    var firstFrame = currentStack[0];
    console.log(firstFrame.currentPage);
    console.log(firstFrame.currentPage.bindingContext.get("message"));
}
exports.getContext = getContext;
function navigate() {
    frame_1.topmost().navigate("main-page");
}
exports.navigate = navigate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhpcmQtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRoaXJkLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4Q0FBd0Q7QUFHeEQsa0NBQTBDO0FBQzFDLElBQUksWUFBWSxHQUFHLElBQUksdUJBQVUsRUFBRSxDQUFDO0FBRXBDLHNCQUE2QixJQUFlO0lBRXhDLElBQUksSUFBSSxHQUFTLElBQUksQ0FBQyxNQUFNLENBQUM7SUFFN0IsWUFBWSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFFNUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxZQUFZLENBQUM7QUFDdkMsQ0FBQztBQVBELG9DQU9DO0FBQ0Q7SUFFSSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsR0FBRyxlQUFPLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyRCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxhQUFLLEVBQUUsQ0FBQyxDQUFDO0lBRWpDLElBQUksWUFBWSxHQUFHLGFBQUssRUFBRSxDQUFDO0lBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBRTFELElBQUksVUFBVSxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFYRCxnQ0FXQztBQUVEO0lBQ0ksZUFBTyxFQUFFLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFGRCw0QkFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RGF0YSwgT2JzZXJ2YWJsZSB9IGZyb20gJ2RhdGEvb2JzZXJ2YWJsZSc7XHJcbmltcG9ydCB7IFBhZ2UgfSBmcm9tICd1aS9wYWdlJztcclxuaW1wb3J0IHsgSGVsbG9Xb3JsZE1vZGVsIH0gZnJvbSAnLi9tYWluLXZpZXctbW9kZWwnO1xyXG5pbXBvcnQgeyB0b3Btb3N0LCBzdGFjayB9IGZyb20gXCJ1aS9mcmFtZVwiO1xyXG5sZXQgc3ViVmlld01vZGVsID0gbmV3IE9ic2VydmFibGUoKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBuYXZpZ2F0aW5nVG8oYXJnczogRXZlbnREYXRhKSB7XHJcblxyXG4gICAgbGV0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcclxuXHJcbiAgICBzdWJWaWV3TW9kZWwuc2V0KFwibmV3UHJvcFwiLCBcIk5hdGl2ZVNjcmlwdFwiKTtcclxuXHJcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gc3ViVmlld01vZGVsO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250ZXh0KCkge1xyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiY3VycmVudFBhZ2U6IFwiICsgdG9wbW9zdCgpLmN1cnJlbnRQYWdlKTsgXHJcbiAgICBjb25zb2xlLmxvZyhcInN0YWNrOiBcIiArIHN0YWNrKCkpOyBcclxuXHJcbiAgICBsZXQgY3VycmVudFN0YWNrID0gc3RhY2soKTtcclxuICAgIGNvbnNvbGUubG9nKFwiY3VycmVudFN0YWNrLmxlbmd0aDogXCIgKyBjdXJyZW50U3RhY2subGVuZ3RoKVxyXG5cclxuICAgIGxldCBmaXJzdEZyYW1lID0gY3VycmVudFN0YWNrWzBdO1xyXG4gICAgY29uc29sZS5sb2coZmlyc3RGcmFtZS5jdXJyZW50UGFnZSlcclxuICAgIGNvbnNvbGUubG9nKGZpcnN0RnJhbWUuY3VycmVudFBhZ2UuYmluZGluZ0NvbnRleHQuZ2V0KFwibWVzc2FnZVwiKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcclxuICAgIHRvcG1vc3QoKS5uYXZpZ2F0ZShcIm1haW4tcGFnZVwiKTtcclxufSJdfQ==