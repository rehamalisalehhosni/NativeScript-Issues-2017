"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("color");
function creatingView(args) {
    console.log("Creating view");
    var nativeView = new android.support.v7.widget.SwitchCompat(args.context);
    // const nativeView = new android.widget.Switch(args.context);
    args.view = nativeView;
}
exports.creatingView = creatingView;
function loaded(args) {
    console.log("Loaded");
    var color = new color_1.Color("#FF0000");
    if (android.os.Build.VERSION.SDK_INT > 19) {
        console.log(args.object.nativeView.getThumbDrawable());
        args.object.nativeView.getThumbDrawable().setColorFilter(color.android, android.graphics.PorterDuff.Mode.SRC_IN);
    }
    else if (android.os.Build.VERSION.SDK_INT <= 19) {
        // implement the logic for the  KITKAT drawable 
        console.log("on API 19");
        console.log(args.object.nativeView.getThumbDrawable());
    }
}
exports.loaded = loaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsK0JBQThCO0FBSTlCLHNCQUE2QixJQUF5QjtJQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzdCLElBQU0sVUFBVSxHQUFHLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUUsOERBQThEO0lBQzlELElBQUksQ0FBQyxJQUFJLEdBQUcsVUFBVSxDQUFDO0FBQzNCLENBQUM7QUFMRCxvQ0FLQztBQUVELGdCQUF1QixJQUFJO0lBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEIsSUFBSSxLQUFLLEdBQUcsSUFBSSxhQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFakMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLGdCQUFnQixFQUFFLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JILENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2hELGdEQUFnRDtRQUNoRCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQzNELENBQUM7QUFDTCxDQUFDO0FBWkQsd0JBWUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudERhdGEgfSBmcm9tICdkYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IHsgUGFnZSB9IGZyb20gJ3VpL3BhZ2UnO1xuaW1wb3J0IHsgQ29sb3IgfSBmcm9tICdjb2xvcic7XG5cbmltcG9ydCB7IENyZWF0ZVZpZXdFdmVudERhdGEgfSBmcm9tIFwidWkvcGxhY2Vob2xkZXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0aW5nVmlldyhhcmdzOiBDcmVhdGVWaWV3RXZlbnREYXRhKSB7XG4gICAgY29uc29sZS5sb2coXCJDcmVhdGluZyB2aWV3XCIpO1xuICAgIGNvbnN0IG5hdGl2ZVZpZXcgPSBuZXcgYW5kcm9pZC5zdXBwb3J0LnY3LndpZGdldC5Td2l0Y2hDb21wYXQoYXJncy5jb250ZXh0KTtcbiAgICAvLyBjb25zdCBuYXRpdmVWaWV3ID0gbmV3IGFuZHJvaWQud2lkZ2V0LlN3aXRjaChhcmdzLmNvbnRleHQpO1xuICAgIGFyZ3MudmlldyA9IG5hdGl2ZVZpZXc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkZWQoYXJncykge1xuICAgIGNvbnNvbGUubG9nKFwiTG9hZGVkXCIpO1xuICAgIGxldCBjb2xvciA9IG5ldyBDb2xvcihcIiNGRjAwMDBcIik7XG5cbiAgICBpZiAoYW5kcm9pZC5vcy5CdWlsZC5WRVJTSU9OLlNES19JTlQgPiAxOSkge1xuICAgICAgICBjb25zb2xlLmxvZyhhcmdzLm9iamVjdC5uYXRpdmVWaWV3LmdldFRodW1iRHJhd2FibGUoKSk7XG4gICAgICAgIGFyZ3Mub2JqZWN0Lm5hdGl2ZVZpZXcuZ2V0VGh1bWJEcmF3YWJsZSgpLnNldENvbG9yRmlsdGVyKGNvbG9yLmFuZHJvaWQsIGFuZHJvaWQuZ3JhcGhpY3MuUG9ydGVyRHVmZi5Nb2RlLlNSQ19JTik7XG4gICAgfSBlbHNlIGlmIChhbmRyb2lkLm9zLkJ1aWxkLlZFUlNJT04uU0RLX0lOVCA8PSAxOSkge1xuICAgICAgICAvLyBpbXBsZW1lbnQgdGhlIGxvZ2ljIGZvciB0aGUgIEtJVEtBVCBkcmF3YWJsZSBcbiAgICAgICAgY29uc29sZS5sb2coXCJvbiBBUEkgMTlcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKGFyZ3Mub2JqZWN0Lm5hdGl2ZVZpZXcuZ2V0VGh1bWJEcmF3YWJsZSgpKTtcbiAgICB9XG59XG4iXX0=